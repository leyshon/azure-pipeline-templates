parameters:
  # See https://gitversion.readthedocs.io/en/latest/reference/versioning-mode/ 
  config: '' 
steps:
# Installing dotnetcore sdk is a workaround to allow global tools to be used.
# See https://github.com/microsoft/azure-pipelines-tasks/issues/8429
- task: DotNetCoreInstaller@0
  displayName: Install .NET Core SDK
  name: install_dotnetcore_sdk
  inputs:
    packageType: 'sdk'
    version: '2.1.500'
- task: DotNetCoreCLI@2
  displayName: 'Install GitVersion (Global Tools Linux Build Agent Workaround)'
  inputs:
    command: custom
    custom: 'tool'
    arguments: 'install -g GitVersion.Tool'
- task: PowerShell@2
  displayName: 'Run GitVersion'
  inputs:
    TargetType: 'inline'
    Script: |
      Set-PSDebug -Trace 1
      Set-Content -Path GitVersion.yml -Value ${{ parameters.config }}
      Get-Content GitVersion.yml
      dotnet-gitversion /output buildserver /nofetch
    pwsh: true
- task: PowerShell@2
  displayName: 'Replace +'
  inputs:
    TargetType: 'inline'
    Script: |
      $buildNumber = $($env:BUILD_BUILDNUMBER).replace('+','-')
      Write-Output $buildNumber
      Write-Output "##vso[build.updatebuildnumber]$buildNumber"
    pwsh: true